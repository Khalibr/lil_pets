
/* PROYECTO FINAL - VETERINARIA */

-- Esquema de bases de datos - Veterinaria & PetShop 'Lil Pet's
-- Alumno: Julian Alejandro Medina
-- Comisi√≥n: #3496
-- Profesor: Cesar Aracena
-- Tutor: Sergio Occhipinti

-- Creacion del esquema y uso

DROP SCHEMA IF EXISTS Lil_Pets;
CREATE SCHEMA Lil_Pets;

USE Lil_Pets;

-- -- --
-- Estructura para la tabla "CLIENTE"
-- -- --
CREATE TABLE IF NOT EXISTS CLIENTE(
	CLI_ID INT NOT NULL AUTO_INCREMENT,
	CLI_nombre VARCHAR(50) NOT NULL,
	CLI_apellido VARCHAR(50) NOT NULL,
	CLI_DNI VARCHAR(50) NOT NULL,
	CLI_domilicio VARCHAR(50) NOT NULL,
	CLI_telefono VARCHAR(20) NOT NULL,
	CLI_email VARCHAR(50) NOT NULL,
    PRIMARY KEY(CLI_ID)
);

-- -- --
-- Estructura para la tabla "MASCOTA"
-- -- --
CREATE TABLE IF NOT EXISTS MASCOTA(
	MAS_ID INT NOT NULL AUTO_INCREMENT,
	MAS_IDCliente INT NOT NULL,
	MAS_nombre VARCHAR(50) NOT NULL,
	MAS_edad DATE NOT NULL,
	MAS_especie VARCHAR(50) NOT NULL,
	MAS_raza VARCHAR(50) NOT NULL,
	MAS_sexo VARCHAR(20) NOT NULL,
	MAS_peso DECIMAL(6,3) NOT NULL,
	MAS_descripcion VARCHAR(140) NOT NULL,
    PRIMARY KEY(MAS_ID),
    CONSTRAINT fk_id_cliente_mascota FOREIGN KEY(MAS_IDCliente) REFERENCES CLIENTE(CLI_ID) ON DELETE CASCADE
);

-- -- --
-- Estructura para la tabla "CATEGORIA_EMPLEADO"
-- -- --
CREATE TABLE IF NOT EXISTS CATEGORIA_EMPLEADO(
	CAT_IDEmpleado INT NOT NULL AUTO_INCREMENT,
    CAT_descripcion VARCHAR(140) NOT NULL,
    PRIMARY KEY(CAT_IDEmpleado)
);

-- -- --
-- Estructura para la tabla "EMPLEADO"
-- -- --
CREATE TABLE IF NOT EXISTS EMPLEADO(
	EMP_ID INT NOT NULL AUTO_INCREMENT,
	EMP_IDCategoria INT NOT NULL,
	EMP_nombre VARCHAR(50) NOT NULL,
	EMP_apellido VARCHAR(50) NOT NULL,
	EMP_sexo VARCHAR(20) NOT NULL,
	EMP_DNI VARCHAR(50) NOT NULL,
	EMP_telefono VARCHAR(50) NOT NULL,
	EMP_fechaNac DATE NOT NULL,
	EMP_salario DECIMAL(8,2) NOT NULL,
	EMP_fechaIngreso DATE NOT NULL,
	PRIMARY KEY(EMP_ID),
    CONSTRAINT fk_id_categoria_empleado FOREIGN KEY(EMP_IDCategoria)
    REFERENCES CATEGORIA_EMPLEADO(CAT_IDEmpleado) ON DELETE CASCADE
);

-- -- --
-- Estructura para la tabla "SERVICIO"
-- -- --
CREATE TABLE IF NOT EXISTS SERVICIO(
	SER_ID INT NOT NULL AUTO_INCREMENT,
    SER_area VARCHAR(50) NOT NULL,
    SER_servicio VARCHAR(50) NOT NULL,
    SER_costo DECIMAL(8,2) NOT NULL,
    SER_descripcion VARCHAR(140) NOT NULL,
    PRIMARY KEY(SER_ID)
);

-- -- --
-- Estructura para la tabla "SERVICIO_PENDIENTE"
-- -- --
CREATE TABLE IF NOT EXISTS SERVICIO_PENDIENTE(
	SPEN_ID INT NOT NULL AUTO_INCREMENT,
    SPEN_IDServicio INT NOT NULL,
    SPEN_IDMascota INT NOT NULL,
    SPEN_IDEmpleado INT NOT NULL,
    SPEN_fechahora DATETIME NOT NULL,
    PRIMARY KEY(SPEN_ID),
    CONSTRAINT fk_id_servicio_s_pendiente FOREIGN KEY(SPEN_IDServicio) REFERENCES SERVICIO(SER_ID) ON DELETE CASCADE,
    CONSTRAINT fk_id_mascota_s_pendiente FOREIGN KEY(SPEN_IDMascota) REFERENCES MASCOTA(MAS_ID) ON DELETE CASCADE,
    CONSTRAINT fk_id_empleado_s_pendiente FOREIGN KEY(SPEN_IDEmpleado) REFERENCES EMPLEADO(EMP_ID) ON DELETE CASCADE
);

-- -- --
-- Estructura para la tabla "HISTORIAL"
-- -- --
CREATE TABLE IF NOT EXISTS HISTORIAL(
	HIS_ID INT NOT NULL AUTO_INCREMENT,
    HIS_IDMascota INT NOT NULL,
	HIS_diagnostico VARCHAR(140) NOT NULL,
    PRIMARY KEY(HIS_ID),
    CONSTRAINT fk_id_mascota_historial FOREIGN KEY(HIS_IDMascota) REFERENCES MASCOTA(MAS_ID) ON DELETE CASCADE
);

-- -- --
-- Estructura para la tabla "FACTURA"
-- -- --
CREATE TABLE IF NOT EXISTS PEDIDO(
	PED_ID INT NOT NULL AUTO_INCREMENT,
    PED_IDCliente INT NOT NULL,
    PED_fechahora DATETIME NOT NULL,
    PRIMARY KEY(PED_ID),
    CONSTRAINT fk_id_cliente_pedido FOREIGN KEY(PED_IDCliente) REFERENCES CLIENTE(CLI_ID) ON DELETE CASCADE
);

-- -- --
-- Estructura para la tabla "CATEGORIA_PRODUCTO"
-- -- --
CREATE TABLE IF NOT EXISTS CATEGORIA_PRODUCTO(
	CAT_IDProducto INT NOT NULL AUTO_INCREMENT,
    CAT_descripcion VARCHAR(50) NOT NULL,
    PRIMARY KEY(CAT_IDProducto)
);

-- -- --
-- Estructura para la tabla "PROVEEDOR"
-- -- --
CREATE TABLE IF NOT EXISTS PROVEEDOR(
	PROV_ID INT NOT NULL AUTO_INCREMENT,
    PROV_nombre VARCHAR(50) NOT NULL,
    PROV_DNI VARCHAR(50) NOT NULL,
    PROV_telefono VARCHAR(20) NOT NULL,
    PROV_email VARCHAR(50) NOT NULL,
    PROV_direccion VARCHAR(50) NOT NULL,
    PROV_web VARCHAR(50) NOT NULL,
    PRIMARY KEY(PROV_ID)
);

-- -- --
-- Estructura para la tabla "PRODUCTO"
-- -- --
CREATE TABLE IF NOT EXISTS PRODUCTO(
	PROD_ID INT NOT NULL AUTO_INCREMENT,    
    PROD_descripcion VARCHAR(140) NOT NULL,
    PROD_IDCategoria INT NOT NULL,
    PROD_costoUnitario DECIMAL(11,2) NOT NULL,
    PROD_IDProveedor INT NOT NULL,
    PRIMARY KEY(PROD_ID),
    CONSTRAINT fk_id_categoria_producto FOREIGN KEY(PROD_IDCategoria) REFERENCES CATEGORIA_PRODUCTO(CAT_IDProducto) ON DELETE CASCADE,
    CONSTRAINT fk_id_proveedor_producto FOREIGN KEY(PROD_IDProveedor) REFERENCES PROVEEDOR(PROV_ID) ON DELETE CASCADE
);

-- -- --
-- Estructura para la tabla "DETALLE_VENTA"
-- -- --
CREATE TABLE IF NOT EXISTS DETALLE_VENTA(
	DET_ID INT NOT NULL AUTO_INCREMENT,
    DET_IDPedido INT NOT NULL,
    DET_IDProducto INT NOT NULL,
    DET_cantidad INT NOT NULL,
	DET_subtotal DECIMAL(11,2) NOT NULL,
    DET_iva INT NOT NULL,
    DET_total DECIMAL(11,2) NOT NULL,
    PRIMARY KEY(DET_ID),
    CONSTRAINT fk_id_pedido_d_venta FOREIGN KEY(DET_IDPedido) REFERENCES PEDIDO(PED_ID) ON DELETE CASCADE,
    CONSTRAINT fk_id_producto_d_venta FOREIGN KEY(DET_IDProducto) REFERENCES PRODUCTO(PROD_ID) ON DELETE CASCADE
);