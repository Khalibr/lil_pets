
/* PROYECTO FINAL - VETERINARIA */

-- Esquema de bases de datos - Veterinaria & PetShop 'Lil Pet's
-- Alumno: Julian Alejandro Medina
-- Comisi√≥n: #3496
-- Profesor: Cesar Aracena
-- Tutor: Sergio Occhipinti

-- Creacion del esquema y uso

DROP SCHEMA IF EXISTS Lil_Pets;
CREATE SCHEMA Lil_Pets;

USE Lil_Pets;

-- -- --
-- Estructura para la tabla "CLIENTE"
-- -- --
CREATE TABLE IF NOT EXISTS CLIENTE(
	CLI_ID INT NOT NULL AUTO_INCREMENT,
    CLI_DNI VARCHAR(50) NOT NULL,
    CLI_telefono VARCHAR(20) NOT NULL,
    CLI_nombre VARCHAR(50) NOT NULL,
    CLI_apellido VARCHAR(50) NOT NULL,
    CLI_domilicio VARCHAR(50) NOT NULL,
    CLI_email VARCHAR(50) NOT NULL,
    PRIMARY KEY(CLI_ID)
);

-- -- --
-- Estructura para la tabla "MASCOTA"
-- -- --
CREATE TABLE IF NOT EXISTS MASCOTA(
	MASC_ID INT NOT NULL AUTO_INCREMENT,
    MASC_IDCliente INT NOT NULL,
    MASC_edad DATE NOT NULL,
    MASC_nombre VARCHAR(50) NOT NULL,
    MASC_especie VARCHAR(50) NOT NULL,
    MASC_raza VARCHAR(50) NOT NULL,
    MASC_sexo VARCHAR(20) NOT NULL,
    MASC_peso DECIMAL(6,3) NOT NULL,
    MASC_descripcion VARCHAR(140) NOT NULL,
    PRIMARY KEY(MASC_ID),
    FOREIGN KEY(MASC_IDCliente) REFERENCES CLIENTE(CLI_ID)
);

-- -- --
-- Estructura para la tabla "CATEGORIA_EMP"
-- -- --
CREATE TABLE IF NOT EXISTS CATEGORIA_EMP(
	CAT_IDEmpleado INT NOT NULL AUTO_INCREMENT,
    CAT_descripcion VARCHAR(140) NOT NULL,
    PRIMARY KEY(CAT_IDEmpleado)
);

-- -- --
-- Estructura para la tabla "EMPLEADO"
-- -- --
CREATE TABLE IF NOT EXISTS EMPLEADO(
	EMP_ID INT NOT NULL AUTO_INCREMENT,
    EMP_IDCategoria INT NOT NULL,
    EMP_DNI VARCHAR(50) NOT NULL,
    EMP_telefono VARCHAR(50) NOT NULL,
    EMP_salario DECIMAL(8,2) NOT NULL,
    EMP_nombre VARCHAR(50) NOT NULL,
    EMP_apellido VARCHAR(50) NOT NULL,
    EMP_sexo VARCHAR(20) NOT NULL,
    EMP_fechaNac DATE NOT NULL,
    EMP_fechaIngreso DATE NOT NULL,
    PRIMARY KEY(EMP_ID),
    FOREIGN KEY(EMP_IDCategoria) REFERENCES CATEGORIA_EMP(CAT_IDEmpleado)
);

-- -- --
-- Estructura para la tabla "SERVICIO"
-- -- --
CREATE TABLE IF NOT EXISTS SERVICIO(
	SERV_ID INT NOT NULL AUTO_INCREMENT,
    SERV_costo DECIMAL(8,2) NOT NULL,
    SER_descripcion VARCHAR(140) NOT NULL,
    PRIMARY KEY(SERV_ID)
);

-- -- --
-- Estructura para la tabla "SERVICIO_PENDIENTE"
-- -- --
CREATE TABLE IF NOT EXISTS SERVICIO_PENDIENTE(
	SPEN_ID INT NOT NULL AUTO_INCREMENT,
    SPEN_IDServicio INT NOT NULL,
    SPEN_IDMascota INT NOT NULL,
    SPEN_fechaHora DATE NOT NULL,
    SPEN_descripcion VARCHAR(140) NOT NULL,
    PRIMARY KEY(SPEN_ID),
    FOREIGN KEY(SPEN_IDServicio) REFERENCES SERVICIO(SERV_ID),
    FOREIGN KEY(SPEN_IDMascota) REFERENCES MASCOTA(MASC_ID)
);

-- -- --
-- Estructura para la tabla "HISTORIAL"
-- -- --
CREATE TABLE IF NOT EXISTS HISTORIAL(
	HIS_ID INT NOT NULL AUTO_INCREMENT,
    HIS_IDMascota INT NOT NULL,
    HIS_IDServicio INT NOT NULL,
    HIS_IDEmpleado INT NOT NULL,
    HIS_diagnostico VARCHAR(140) NOT NULL,
    HIS_descripcion VARCHAR(140) NOT NULL,
    PRIMARY KEY(HIS_ID),
    FOREIGN KEY(HIS_IDMascota) REFERENCES MASCOTA(MASC_ID),
    FOREIGN KEY(HIS_IDServicio) REFERENCES SERVICIO(SERV_ID),
    FOREIGN KEY(HIS_IDEmpleado) REFERENCES EMPLEADO(EMP_ID)
);

-- -- --
-- Estructura para la tabla "PEDIDO"
-- -- --
CREATE TABLE IF NOT EXISTS PEDIDO(
	PED_ID INT NOT NULL AUTO_INCREMENT,
    PED_IDCliente INT NOT NULL,
    PED_fechaHora DATETIME NOT NULL,
    PRIMARY KEY(PED_ID),
    FOREIGN KEY(PED_IDCliente) REFERENCES CLIENTE(CLI_ID)
);

-- -- --
-- Estructura para la tabla "CATEGORIA_PRO"
-- -- --
CREATE TABLE IF NOT EXISTS CATEGORIA_PRO(
	CAT_IDProducto INT NOT NULL AUTO_INCREMENT,
    CAT_descripcion VARCHAR(140) NOT NULL,
    PRIMARY KEY(CAT_IDProducto)
);

-- -- --
-- Estructura para la tabla "PROVEEDOR"
-- -- --
CREATE TABLE IF NOT EXISTS PROVEEDOR(
	PROV_ID INT NOT NULL AUTO_INCREMENT,
    PROV_nombre VARCHAR(50) NOT NULL,
    PROV_DNI VARCHAR(50) NOT NULL,
    PROV_telefono VARCHAR(20) NOT NULL,
    PROV_email VARCHAR(50) NOT NULL,
    PROV_direccion VARCHAR(50) NOT NULL,
    PROV_web VARCHAR(50) NOT NULL,
    PRIMARY KEY(PROV_ID)
);

-- -- --
-- Estructura para la tabla "PRODUCTO"
-- -- --
CREATE TABLE IF NOT EXISTS PRODUCTO(
	PROD_ID INT NOT NULL AUTO_INCREMENT,
    PROD_IDCategoria INT NOT NULL,
    PROD_IDProveedor INT NOT NULL,
    PROD_costoUnitario DECIMAL(11,2) NOT NULL,
    PROD_nombre VARCHAR(50) NOT NULL,
    PROD_descripcion VARCHAR(140) NOT NULL,
    PRIMARY KEY(PROD_ID),
    FOREIGN KEY(PROD_IDCategoria) REFERENCES CATEGORIA_PRO(CAT_IDProducto),
    FOREIGN KEY(PROD_IDProveedor) REFERENCES PROVEEDOR(PROV_ID)
);

-- -- --
-- Estructura para la tabla "DETALLE_VENTA"
-- -- --
CREATE TABLE IF NOT EXISTS DETALLE_VENTA(
	DET_ID INT NOT NULL AUTO_INCREMENT,
    DET_IDPedido INT NOT NULL,
    DET_IDProducto INT NOT NULL,
    DET_cantidad INT NOT NULL,
    DET_precioVenta DECIMAL(11,2) NOT NULL,
    PRIMARY KEY(DET_ID),
    FOREIGN KEY(DET_IDPedido) REFERENCES PEDIDO(PED_ID),
    FOREIGN KEY(DET_IDProducto) REFERENCES PRODUCTO(PROD_ID)
);

-- -- --
-- Estructura para la tabla "FACTURA"
-- -- --
CREATE TABLE IF NOT EXISTS FACTURA(
	FAC_ID INT NOT NULL AUTO_INCREMENT,
    FAC_IDServicio INT NOT NULL,
    FAC_IDEmpleado INT NOT NULL,
    FAC_IDCliente INT NOT NULL,
    FAC_IDProducto INT NOT NULL,
    FAC_fecha DATE NOT NULL,
    FAC_total DECIMAL(11,2) NOT NULL,
    PRIMARY KEY(FAC_ID),
    FOREIGN KEY(FAC_IDServicio) REFERENCES SERVICIO(SERV_ID),
    FOREIGN KEY(FAC_IDEmpleado) REFERENCES EMPLEADO(EMP_ID),
    FOREIGN KEY(FAC_IDCliente) REFERENCES CLIENTE(CLI_ID),
    FOREIGN KEY(FAC_IDProducto) REFERENCES PRODUCTO(PROD_ID)
);